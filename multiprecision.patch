--- a/boost_1_68_0/boost/multiprecision/detail/default_ops.hpp
+++ b/boost_1_68_0/boost/multiprecision/detail/default_ops.hpp
@@ -381,7 +381,7 @@
       eval_multiply(t, v);
    }
 }
-#if !BOOST_WORKAROUND(BOOST_MSVC, < 1900)
+#if !BOOST_WORKAROUND(BOOST_MSVC, < 2500)
 template <class T, class U>
 inline typename enable_if_c<is_convertible<U, number<T, et_on> >::value && !is_convertible<U, T>::value>::type eval_multiply_default(T& t, const T& u, const U& v)
 {
@@ -500,7 +500,7 @@
       eval_divide(t, v);
    }
 }
-#if !BOOST_WORKAROUND(BOOST_MSVC, < 1900)
+#if !BOOST_WORKAROUND(BOOST_MSVC, < 2500)
 template <class T, class U>
 inline typename enable_if_c<is_convertible<U, number<T, et_on> >::value && !is_convertible<U, T>::value>::type eval_divide_default(T& t, const T& u, const U& v)
 {
