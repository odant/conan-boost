diff --git a/boost_1_73_0/boost/smart_ptr/weak_ptr.hpp b/boost_1_73_0/boost/smart_ptr/weak_ptr.hpp
index 07ba189f4..469905904 100644
--- a/boost_1_73_0/boost/smart_ptr/weak_ptr.hpp
+++ b/boost_1_73_0/boost/smart_ptr/weak_ptr.hpp
@@ -246,6 +246,8 @@ private:
 
     template<class Y> friend class weak_ptr;
     template<class Y> friend class shared_ptr;
+    template<class Y> friend inline std::size_t hash_value(boost::weak_ptr<Y> const & p) BOOST_SP_NOEXCEPT;
+    template<class Y, class U> friend inline bool operator==(weak_ptr<Y> const & a, weak_ptr<U> const & b) BOOST_SP_NOEXCEPT;
 
 #endif
 
@@ -264,6 +266,20 @@ template<class T> void swap(weak_ptr<T> & a, weak_ptr<T> & b) BOOST_SP_NOEXCEPT
     a.swap(b);
 }
 
+// hash_value
+
+template<class Y> struct hash;
+
+template<class Y> inline std::size_t hash_value(weak_ptr<Y> const & p) BOOST_SP_NOEXCEPT
+{
+    return boost::hash<typename boost::weak_ptr<Y>::element_type* >()(p.px);
+}
+
+template<class Y, class U> inline bool operator==(weak_ptr<Y> const & a, weak_ptr<U> const & b) BOOST_SP_NOEXCEPT
+{
+    return a.pn == b.pn;
+}
+
 #if defined(__cpp_deduction_guides)
 
 template<class T> weak_ptr( shared_ptr<T> ) -> weak_ptr<T>;
