diff --git a/boost_1_84_0/libs/locale/build/Jamfile.v2 b/boost_1_84_0/libs/locale/build/Jamfile.v2
index c4130a1786..180251501a 100644
--- a/boost_1_84_0/libs/locale/build/Jamfile.v2
+++ b/boost_1_84_0/libs/locale/build/Jamfile.v2
@@ -5,9 +5,7 @@
 # Distributed under the Boost Software License, Version 1.0.
 # https://www.boost.org/LICENSE_1_0.txt.
 
-import config : requires ;
 import configure ;
-import errors ;
 import feature ;
 import os ;
 import path ;
@@ -27,35 +25,25 @@ feature.feature boost.locale.posix : on off : optional propagated ;
 feature.feature boost.locale.std : on off : optional propagated ;
 feature.feature boost.locale.winapi : on off : optional propagated ;
 
-local rule debug-message ( message * )
-{
-    if --debug-configuration in [ modules.peek : ARGV ]
-    {
-        ECHO "notice:" "[locale]" $(message) ;
-    }
-}
-
 # Configuration of libraries
 
 ## iconv
-# Iconv support may be builtin (i.e. in libc)
 
 exe has_iconv : $(TOP)/build/has_iconv.cpp ;
 explicit has_iconv ;
 
 ICONV_PATH = [ modules.peek : ICONV_PATH ] ;
 
-# There may also be an external iconv library
-lib iconv :
+lib iconv
+  :
   : <search>$(ICONV_PATH)/lib <link>shared <runtime-link>shared
-  : : <include>$(ICONV_PATH)/include
+  :
+  : <include>$(ICONV_PATH)/include
   ;
 
 explicit iconv ;
 
-# Separate pair of obj & exe rules so the CPP file is built with the iconv include path
-obj has_external_iconv_obj : $(TOP)/build/has_iconv.cpp iconv ;
-exe has_external_iconv : has_external_iconv_obj iconv ;
+exe has_external_iconv : $(TOP)/build/has_iconv.cpp iconv ;
 explicit has_external_iconv ;
 
 exe accepts_shared_option   : $(TOP)/build/option.cpp
@@ -72,130 +60,169 @@ explicit has_xlocale ;
 
 #end xlocale
 
-if [ modules.peek : ICU_LINK ]
-{
-    errors.user-error : "The ICU_LINK option is no longer supported by the Boost.Locale build - please refer to the documentation for equivalent options" ;
-}
-
-if [ modules.peek : ICU_LINK_LOCALE ]
-{
-    errors.user-error : "The ICU_LINK_LOCALE option is no longer supported by the Boost.Locale build - please refer to the documentation for equivalent options" ;
-}
-
 # Specify the root path to the installed ICU libraries via
 #   - Environment variable: ICU_PATH
 #   - `b2 .. -s ICU_PATH=x`
 #   - In project-config.jam as `path-constant ICU_PATH : x ;
 
-.icu-path = [ modules.peek : ICU_PATH ] ; # -sICU_PATH=x or env variable
-.icu-path ?= $(ICU_PATH) ;                # path-constant
+local icu-path = [ modules.peek : ICU_PATH ] ; # -sICU_PATH=x or env variable
+icu-path ?= $(ICU_PATH) ;                      # path-constant
 
-if $(.icu-path)
+if $(icu-path)
 {
-    .icu-path = [ path.make $(.icu-path) ] ; # Normalize
-    debug-message ICU path set to "$(.icu-path)" ;
+    icu-path = [ path.make $(icu-path) ] ; # Normalize
 }
 
-rule path_options ( properties * )
+ICU_LINK = [ modules.peek : ICU_LINK ] ;
+# Temporary workaround for incompatibility of ICU_LINK with Boost.Regex:
+# Use ICU_LINK_LOCALE instead of ICU_LINK.
+# Note that ICU_LINK and ICU_LINK_LOCALE will be removed in Boost 1.81
+# in favor of a similar solution to Boost.Regex or a B2 module.
+ICU_LINK ?= [ modules.peek : ICU_LINK_LOCALE ] ;
+ICU_STATIC_RUNTIME =  [ modules.peek : ICU_STATIC_RUNTIME ] ;
+
+if $(ICU_LINK)
 {
-    local result ;
-    if <address-model>64 in $(properties) && <toolset>msvc in $(properties)
+    if $(ICU_STATIC_RUNTIME)
     {
-        debug-message Search 64 bit ICU in "$(.icu-path)/lib64" ;
-        result = <search>$(.icu-path)/bin64 <search>$(.icu-path)/lib64 ;
+        ICU_OPTS = <include>$(icu-path)/include <linkflags>$(ICU_LINK) <dll-path>$(icu-path)/bin <runtime-link>static ;
+        ICU64_OPTS = <include>$(icu-path)/include <linkflags>$(ICU_LINK) <dll-path>$(icu-path)/bin64 <runtime-link>static ;
     }
     else
     {
-        debug-message Search ICU in "$(.icu-path)/lib" ;
-        result = <search>$(.icu-path)/bin <search>$(.icu-path)/lib ;
+        ICU_OPTS = <include>$(icu-path)/include <linkflags>$(ICU_LINK) <dll-path>$(icu-path)/bin <runtime-link>shared ;
+        ICU64_OPTS = <include>$(icu-path)/include <linkflags>$(ICU_LINK) <dll-path>$(icu-path)/bin64 <runtime-link>shared ;
     }
-    return $(result) ;
-}
-
-if [ modules.peek : ICU_ICUUC_NAME ]
-{
-   ICU_ICUUC_NAME =  [ modules.peek : ICU_ICUUC_NAME ] ;
-}
-if [ modules.peek : ICU_ICUDT_NAME ]
-{
-   ICU_ICUDT_NAME =  [ modules.peek : ICU_ICUDT_NAME ] ;
-}
-if [ modules.peek : ICU_ICUIN_NAME ]
+    
+} else
 {
-   ICU_ICUIN_NAME =  [ modules.peek : ICU_ICUIN_NAME ] ;
-}
-
-if $(ICU_ICUUC_NAME)
-{
-    lib icuuc : : <name>$(ICU_ICUUC_NAME) <conditional>@path_options ;
-    debug-message Using "$(ICU_ICUUC_NAME)" for library "icuuc" ;
-}
-else
-{
-    lib icuuc : :                                                               <runtime-link>shared <conditional>@path_options ;
-    lib icuuc : : <toolset>msvc                     <variant>debug <name>icuucd <runtime-link>shared <conditional>@path_options ;
-    lib icuuc : : <toolset>intel <target-os>windows <variant>debug <name>icuucd <runtime-link>shared <conditional>@path_options ;
-    lib icuuc : :                                                  <name>sicuuc <runtime-link>static <conditional>@path_options ;
-    lib icuuc : : <toolset>msvc                     <variant>debug <name>sicuucd <runtime-link>static <conditional>@path_options ;
-    lib icuuc : : <toolset>intel <target-os>windows <variant>debug <name>sicuucd <runtime-link>static <conditional>@path_options ;
-    lib icuuc : : <name>this_is_an_invalid_library_name ;
-}
-
-if $(ICU_ICUDT_NAME)
-{
-    lib icudt : : <name>$(ICU_ICUDT_NAME) <conditional>@path_options ;
-    debug-message Using "$(ICU_ICUDT_NAME)" for library "icudt" ;
-}
-else
-{
-    lib icudt : : <name>icudata                                   <runtime-link>shared <conditional>@path_options ;
-    lib icudt : : <name>icudt   <toolset>msvc                     <runtime-link>shared <conditional>@path_options ;
-    lib icudt : : <name>icudt   <toolset>intel <target-os>windows <runtime-link>shared <conditional>@path_options ;
-    lib icudt : : <name>sicudata                                   <runtime-link>static <conditional>@path_options ;
-    lib icudt : : <name>sicudt   <toolset>msvc                     <runtime-link>static <conditional>@path_options ;
-    lib icudt : : <name>sicudt   <toolset>intel <target-os>windows <runtime-link>static <conditional>@path_options ;
-    lib icudt : : <name>this_is_an_invalid_library_name ;
-}
+    searched-lib icuuc : :  <name>icuuc
+                            <search>$(icu-path)/lib
+                            <link>shared
+                            <runtime-link>shared ;
+
+    searched-lib icuuc : :  <toolset>msvc
+                            <variant>debug
+                            <name>icuucd
+                            <search>$(icu-path)/lib
+                            <link>shared
+                            <runtime-link>shared ;
+
+    searched-lib icuuc : :  <name>this_is_an_invalid_library_name ;
+
+    searched-lib icudt : :  <search>$(icu-path)/lib
+                            <name>icudata
+                            <link>shared
+                            <runtime-link>shared ;
+
+    searched-lib icudt : :  <search>$(icu-path)/lib
+                            <name>icudt
+                            <toolset>msvc
+                            <link>shared
+                            <runtime-link>shared ;
+
+    searched-lib icudt : :  <name>this_is_an_invalid_library_name ;
+
+    searched-lib icuin : :  <search>$(icu-path)/lib
+                            <name>icui18n
+                            <link>shared
+                            <runtime-link>shared ;
+
+    searched-lib icuin : :  <toolset>msvc
+                            <variant>debug
+                            <name>icuind
+                            <search>$(icu-path)/lib
+                            <link>shared
+                            <runtime-link>shared ;
+
+    searched-lib icuin : :  <toolset>msvc
+                            <variant>release
+                            <name>icuin
+                            <search>$(icu-path)/lib
+                            <link>shared
+                            <runtime-link>shared ;
+
+    searched-lib icuin : :  <name>this_is_an_invalid_library_name ;
+
+    explicit icuuc icudt icuin ;
+
+    ICU_OPTS =   <include>$(icu-path)/include
+      <library>icuuc/<link>shared/<runtime-link>shared
+      <library>icudt/<link>shared/<runtime-link>shared
+      <library>icuin/<link>shared/<runtime-link>shared
+      <dll-path>$(icu-path)/bin
+        <runtime-link>shared ;
+
+
+
+    searched-lib icuuc_64 : :   <name>icuuc
+                                <search>$(icu-path)/lib64
+                                <link>shared
+                                <runtime-link>shared ;
+
+    searched-lib icuuc_64 : :   <toolset>msvc
+                                <variant>debug
+                                <name>icuucd
+                                <search>$(icu-path)/lib64
+                                <link>shared
+                                <runtime-link>shared ;
+
+    searched-lib icuuc_64 : :   <name>this_is_an_invalid_library_name ;
+
+    searched-lib icudt_64 : :   <search>$(icu-path)/lib64
+                                <name>icudata
+                                <link>shared
+                                <runtime-link>shared ;
+
+    searched-lib icudt_64 : :   <search>$(icu-path)/lib64
+                                <name>icudt
+                                <toolset>msvc
+                                <link>shared
+                                <runtime-link>shared ;
+
+    searched-lib icudt_64 : :   <name>this_is_an_invalid_library_name ;
+
+    searched-lib icuin_64 : :   <search>$(icu-path)/lib64
+                                <name>icui18n
+                                <link>shared
+                                <runtime-link>shared ;
+
+    searched-lib icuin_64 : :   <toolset>msvc
+                                <variant>debug
+                                <name>icuind
+                                <search>$(icu-path)/lib64
+                                <link>shared
+                                <runtime-link>shared ;
+
+    searched-lib icuin_64 : :   <toolset>msvc
+                                <variant>release
+                                <name>icuin
+                                <search>$(icu-path)/lib64
+                                <link>shared
+                                <runtime-link>shared ;
+
+    searched-lib icuin_64 : :   <name>this_is_an_invalid_library_name ;
+
+    explicit icuuc_64 icudt_64 icuin_64 ;
+
+    ICU64_OPTS =   <include>$(icu-path)/include
+      <library>icuuc_64/<link>shared/<runtime-link>shared
+      <library>icudt_64/<link>shared/<runtime-link>shared
+      <library>icuin_64/<link>shared/<runtime-link>shared
+      <dll-path>$(icu-path)/bin64
+        <runtime-link>shared ;
 
-if $(ICU_ICUIN_NAME)
-{
-    lib icuin : : <name>$(ICU_ICUIN_NAME) <conditional>@path_options ;
-    debug-message Using "$(ICU_ICUIN_NAME)" for library "icuin" ;
-}
-else
-{
-    lib icuin : :                                                    <name>icui18n <runtime-link>shared <conditional>@path_options ;
-    lib icuin : : <toolset>msvc                     <variant>debug   <name>icuind  <runtime-link>shared <conditional>@path_options ;
-    lib icuin : : <toolset>msvc                                      <name>icuin   <runtime-link>shared <conditional>@path_options ;
-    lib icuin : : <toolset>intel <target-os>windows <variant>debug   <name>icuind  <runtime-link>shared <conditional>@path_options ;
-    lib icuin : : <toolset>intel <target-os>windows                  <name>icuin   <runtime-link>shared <conditional>@path_options ;
-    lib icuin : :                                                    <name>sicui18n <runtime-link>static <conditional>@path_options ;
-    lib icuin : : <toolset>msvc                     <variant>debug   <name>sicuind  <runtime-link>static <conditional>@path_options ;
-    lib icuin : : <toolset>msvc                                      <name>sicuin   <runtime-link>static <conditional>@path_options ;
-    lib icuin : : <toolset>intel <target-os>windows <variant>debug   <name>sicuind  <runtime-link>static <conditional>@path_options ;
-    lib icuin : : <toolset>intel <target-os>windows                  <name>sicuin   <runtime-link>static <conditional>@path_options ;
-    lib icuin : : <name>this_is_an_invalid_library_name ;
 }
 
-ICU_OPTS =
-  <include>$(.icu-path)/include
-  <runtime-link>shared:<library>icuuc/<link>shared
-  <runtime-link>shared:<library>icudt/<link>shared
-  <runtime-link>shared:<library>icuin/<link>shared
-  <runtime-link>static:<library>icuuc
-  <runtime-link>static:<library>icudt
-  <runtime-link>static:<library>icuin
-  <target-os>windows,<toolset>clang:<linkflags>"advapi32.lib"
-  <runtime-link>static:<define>U_STATIC_IMPLEMENTATION=1
-  ;
+exe has_icu   : $(TOP)/build/has_icu_test.cpp : $(ICU_OPTS)   ;
+exe has_icu64 : $(TOP)/build/has_icu_test.cpp : $(ICU64_OPTS) ;
 
-exe has_icu : $(TOP)/build/has_icu_test.cpp : $(ICU_OPTS) ;
-explicit has_icu ;
+explicit has_icu has_icu64 ;
 
 
 # This function is called whenever the 'boost_locale' metatarget
-# below is generated and figures out what external components we have,
-# what the user wants, and what sources have to be compiled in the end.
+# below is generated and figures what external components we have,
+# what user wants, and what sources have to be compiled in the end.
 rule configure-full ( properties * : flags-only )
 {
 
@@ -239,7 +266,14 @@ rule configure-full ( properties * : flags-only )
         {
             found-icu = true ;
             flags-result += <define>BOOST_LOCALE_WITH_ICU=1 $(ICU_OPTS) ;
+        } else if [ configure.builds has_icu64 : $(properties) : "icu (lib64)" ]
+        {
+            found-icu = true ;
+            flags-result += <define>BOOST_LOCALE_WITH_ICU=1 $(ICU64_OPTS) ;
+        }
 
+        if $(found-icu)
+        {
             ICU_SOURCES =
                 boundary
                 codecvt
@@ -391,24 +424,6 @@ rule configure-flags ( properties * )
 
 alias build_flags : : : : <conditional>@configure-flags ;
 
-local cxx_requirements = [ requires
-      cxx11_auto_declarations
-      cxx11_decltype
-      cxx11_defaulted_functions
-      cxx11_defaulted_moves
-      cxx11_hdr_functional
-      cxx11_hdr_type_traits
-      cxx11_noexcept
-      cxx11_nullptr
-      cxx11_override
-      cxx11_range_based_for
-      cxx11_rvalue_references
-      cxx11_scoped_enums
-      cxx11_smart_ptr
-      cxx11_static_assert
-      cxx11_variadic_templates
-    ] ;
-
 boost-lib locale
     :
       encoding/codepage.cpp
@@ -427,14 +442,14 @@ boost-lib locale
       util/info.cpp
       util/locale_data.cpp
     :
-      $(cxx_requirements)
       <define>BOOST_LOCALE_SOURCE
       # Don't link explicitly, not required
       <define>BOOST_THREAD_NO_LIB=1
       <include>$(TOP)/src
       <threading>multi
       <target-os>windows:<define>_CRT_SECURE_NO_WARNINGS
       <target-os>windows:<define>_SCL_SECURE_NO_WARNINGS
+      <toolset>gcc:<cxxflags>"-Wno-long-long -Wno-deprecated-declarations"
+      <toolset>clang:<cxxflags>"-Wno-long-long -Wno-deprecated-declarations"
       # Meanwhile remove this
       <conditional>@configure
-    : : $(cxx_requirements)
     ;
